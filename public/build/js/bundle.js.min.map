{"version":3,"sources":["horas.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","tag","etiqueta","createElement","ondblclick","eliminarTag","appendChild","actualizarInputHidden","toString","split","keyCode","trim","preventDefault"],"mappings":"CAAA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CACA,MAAAC,EAAAF,SAAAC,cAAA,yBACAE,EAAAH,SAAAI,iBAAA,gBACAC,EAAAL,SAAAC,cAAA,mBACAK,EAAAN,SAAAC,cAAA,oBAEAC,EAAAK,iBAAA,SAAAC,GACAL,EAAAM,QAAAC,GAAAA,EAAAH,iBAAA,SAAAC,IAEA,IAAAG,EAAA,CACAC,aAAA,GACAF,IAAA,IAGA,SAAAF,EAAAK,GACAF,EAAAE,EAAAC,OAAAC,MAAAF,EAAAC,OAAAE,MAGAV,EAAAU,MAAA,GACAX,EAAAW,MAAA,GAEA,MAAAC,EAAAjB,SAAAC,cAAA,8BACAgB,GACAA,EAAAC,UAAAC,OAAA,6BAGAC,OAAAC,OAAAV,GAAAW,SAAA,KAOAC,iBACA,MAAAb,IAAAA,EAAAE,aAAAA,GAAAD,EACAa,EAAA,+BAAAd,kBAAAE,IAEAa,QAAAC,MAAAF,IAMA,SAAAG,GAEA,MAAAC,EAAA5B,SAAAI,iBAAA,aACAwB,EAAAnB,QAAAoB,GAAAA,EAAAX,UAAAY,IAAA,+BAGA,MAAAC,EAAAJ,EAAAK,IAAAC,GAAAA,EAAAC,SACAC,EAAAC,MAAAC,KAAAT,GACAO,EAAAG,OAAAT,IAAAE,EAAAT,SAAAO,EAAAU,QAAAC,SAEA/B,QAAAoB,GAAAA,EAAAX,UAAAC,OAAA,+BAEAnB,SAAAI,iBAAA,8CACAK,QAAAgC,GAAAA,EAAAlC,iBAAA,QAAAmC,IAhBAC,OAFAlB,EAAAmB,QARAC,GA6BA,SAAAH,EAAA7B,GAEA,MAAAI,EAAAjB,SAAAC,cAAA,8BACAgB,GACAA,EAAAC,UAAAC,OAAA,6BAIAN,EAAAC,OAAAI,UAAAY,IAAA,6BAEAxB,EAAAU,MAAAH,EAAAC,OAAAyB,QAAAC,OAGAnC,EAAAW,MAAAhB,SAAAC,cAAA,wBAAAe,QA3EA,GCAA,WACA,MAAA8B,EAAA9C,SAAAC,cAAA,eAEA,GAAA6C,EAAA,CACA,MAAAC,EAAA/C,SAAAC,cAAA,SACA+C,EAAAhD,SAAAC,cAAA,iBAEA,IAAAgD,EAAA,GA0BA,SAAAC,IACAH,EAAAI,YAAA,GAEAF,EAAAxC,QAAA2C,IACA,MAAAC,EAAArD,SAAAsD,cAAA,MACAD,EAAAnC,UAAAY,IAAA,mBACAuB,EAAAF,YAAAC,EACAC,EAAAE,WAAAC,EACAT,EAAAU,YAAAJ,KAGAK,IAGA,SAAAF,EAAA3C,GACAA,EAAAC,OAAAK,SAGA8B,EAAAA,EAAAX,OAAAc,GAAAA,IAAAvC,EAAAC,OAAAqC,aAEAO,IAGA,SAAAA,IACAV,EAAAhC,MAAAiC,EAAAU,WA/CA,KAAAX,EAAAhC,QACAiC,EAAAD,EAAAhC,MAAA4C,MAAA,KACAV,KAIAJ,EAAAvC,iBAAA,YAEA,SAAAM,GACA,GAAA,KAAAA,EAAAgD,QAAA,CACA,GAAA,KAAAhD,EAAAC,OAAAE,MAAA8C,QAAAjD,EAAAC,OAAAE,MAAA,EACA,OAGAH,EAAAkD,iBACAd,EAAA,IAAAA,EAAApC,EAAAC,OAAAE,MAAA8C,QACAhB,EAAA9B,MAAA,GAEAkC,SA5BA","file":"bundle.js","sourcesContent":["(function() {\r\n  const horas = document.querySelector('#horas')\r\n\r\n  if(horas) {\r\n    const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n    const dias = document.querySelectorAll('[name=\"dia\"]');\r\n    const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n    const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n    categoria.addEventListener('change', terminoBusqueda);\r\n    dias.forEach(dia => dia.addEventListener('change', terminoBusqueda))\r\n\r\n    let busqueda = {\r\n      categoria_id: '',\r\n      dia: ''\r\n    }\r\n\r\n    function terminoBusqueda(e) {\r\n      busqueda[e.target.name] = e.target.value;  // Buscar los valores de cada Objeto\r\n\r\n      // Reiniciar los campos ocultos y el selector de horas\r\n      inputHiddenHora.value = '';\r\n      inputHiddenDia.value = '';\r\n\r\n      const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n      if(horaPrevia) {\r\n        horaPrevia.classList.remove('horas__hora--seleccionada');\r\n      }\r\n\r\n      if(Object.values(busqueda).includes('')) {  // Comprobar si el Objeto tiene todos los valores llenos\r\n        return\r\n      }\r\n\r\n      buscarEventos();\r\n    }\r\n\r\n    async function buscarEventos() {\r\n      const {dia, categoria_id} = busqueda\r\n      const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n      const resultado = await fetch(url);\r\n      const eventos = await resultado.json();\r\n\r\n      obtenerHorasDisponibles(eventos);\r\n    }\r\n\r\n    function obtenerHorasDisponibles(eventos) {\r\n      // Reiniciar las Horas\r\n      const listadoHoras = document.querySelectorAll('#horas li');  // Obtiene Todas las Horas\r\n      listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n\r\n      // Comprobar Eventos ya tomados y quitar la Variable de Deshabilitado.\r\n      const horasTomadas = eventos.map(evento => evento.hora_id);  // Obtiene las Horas Reservadas\r\n      const listadoHorasArray = Array.from(listadoHoras);\r\n      const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));  // Filtra las Horas Disponibles (Todas - Reservadas)\r\n\r\n      resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'))\r\n\r\n      const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)'); // Obtine las horas Disponibles.\r\n      horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\r\n    }\r\n\r\n    function seleccionarHora(e) {\r\n      // Deshabilitar la Hora previa, Si hay un Nuevo Click\r\n      const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n      if(horaPrevia) {\r\n        horaPrevia.classList.remove('horas__hora--seleccionada');\r\n      }\r\n\r\n      // Agregar clase de Seleccionado\r\n      e.target.classList.add('horas__hora--seleccionada')\r\n\r\n      inputHiddenHora.value = e.target.dataset.horaId\r\n\r\n      // Llenar el input Oculto de dia\r\n      inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value\r\n    }\r\n  }\r\n\r\n\r\n})();","(function() {\r\n  const tagsInput = document.querySelector('#tags_input');\r\n\r\n  if(tagsInput) {\r\n    const tagsDiv = document.querySelector('#tags');\r\n    const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n    let tags = [];\r\n\r\n    // Recuperar del input oculto\r\n    if(tagsInputHidden.value !== '') {\r\n      tags = tagsInputHidden.value.split(',');\r\n      mostrarTags();\r\n    }\r\n\r\n    // Escuchar los Cambios en el Input\r\n    tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n    function guardarTag(e) {\r\n      if(e.keyCode === 44) {\r\n        if(e.target.value.trim() === '' || e.target.value < 1) {\r\n          return;\r\n        };\r\n\r\n        e.preventDefault();\r\n        tags = [...tags, e.target.value.trim()];\r\n        tagsInput.value = '';\r\n\r\n        mostrarTags();\r\n      }\r\n      \r\n    }\r\n\r\n    function mostrarTags() {\r\n      tagsDiv.textContent = '';\r\n\r\n      tags.forEach(tag => {\r\n        const etiqueta = document.createElement('LI');\r\n        etiqueta.classList.add('formulario__tag');\r\n        etiqueta.textContent = tag;\r\n        etiqueta.ondblclick = eliminarTag;\r\n        tagsDiv.appendChild(etiqueta);\r\n      });\r\n\r\n      actualizarInputHidden();\r\n    }\r\n\r\n    function eliminarTag(e) {\r\n      e.target.remove();\r\n\r\n      // Retornar un Nuevo arreglo con elementos que cumplen la Condición\r\n      tags = tags.filter(tag => tag !== e.target.textContent);\r\n\r\n      actualizarInputHidden()\r\n    }\r\n\r\n    function actualizarInputHidden() {\r\n      tagsInputHidden.value = tags.toString();\r\n    }\r\n  }\r\n})();  // Esta Función completa es un IIFE"]}